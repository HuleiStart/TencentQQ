<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.tencentqq.dao.UserinfoDao">

    <resultMap id="BaseResultMap" type="com.cf.tencentqq.entity.Userinfo">
        <!--@Table userinfo-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="loginpwd" column="loginpwd" jdbcType="VARCHAR"/>
        <result property="friendshippolicyid" column="friendshippolicyid" jdbcType="INTEGER"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="faceid" column="faceid" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="bloodtypeid" column="bloodtypeid" jdbcType="INTEGER"/>
        <result property="starid" column="starid" jdbcType="INTEGER"/>
        <result property="animalyearid" column="animalyearid" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="stateid" column="stateid" jdbcType="INTEGER"/>
        <result property="questionid" column="questionid" jdbcType="INTEGER"/>
        <result property="answer" column="answer" jdbcType="VARCHAR"/>
    </resultMap>

    <!--
        登录功能
        id:查询的标识   通过  login  可以执行这条SQL语句
        resultType ： 返回值类型
    -->
    <select id="login" resultType="com.cf.tencentqq.entity.Userinfo">

        select  * from userinfo where id = #{id} and loginpwd = #{loginpwd}

    </select>


    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer
        from userinfo
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer
        from userinfo
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginpwd != null and loginpwd != ''">
                and loginpwd = #{loginpwd}
            </if>
            <if test="friendshippolicyid != null">
                and friendshippolicyid = #{friendshippolicyid}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="faceid != null">
                and faceid = #{faceid}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="bloodtypeid != null">
                and bloodtypeid = #{bloodtypeid}
            </if>
            <if test="starid != null">
                and starid = #{starid}
            </if>
            <if test="animalyearid != null">
                and animalyearid = #{animalyearid}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="stateid != null">
                and stateid = #{stateid}
            </if>
            <if test="questionid != null">
                and questionid = #{questionid}
            </if>
            <if test="answer != null and answer != ''">
                and answer = #{answer}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
<!--    <select id="queryAll" resultMap="BaseResultMap">-->
<!--        select-->
<!--          id, loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer-->
<!--        from qq.userinfo-->
<!--    </select>-->
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from userinfo
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginpwd != null and loginpwd != ''">
                and loginpwd = #{loginpwd}
            </if>
            <if test="friendshippolicyid != null">
                and friendshippolicyid = #{friendshippolicyid}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="faceid != null">
                and faceid = #{faceid}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="bloodtypeid != null">
                and bloodtypeid = #{bloodtypeid}
            </if>
            <if test="starid != null">
                and starid = #{starid}
            </if>
            <if test="animalyearid != null">
                and animalyearid = #{animalyearid}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="stateid != null">
                and stateid = #{stateid}
            </if>
            <if test="questionid != null">
                and questionid = #{questionid}
            </if>
            <if test="answer != null and answer != ''">
                and answer = #{answer}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into userinfo(loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer)
        values (#{loginpwd}, #{friendshippolicyid}, #{nickname}, #{faceid}, #{sex}, #{age}, #{name}, #{bloodtypeid}, #{starid}, #{animalyearid}, #{address}, #{stateid}, #{questionid}, #{answer})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into userinfo(loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.loginpwd}, #{entity.friendshippolicyid}, #{entity.nickname}, #{entity.faceid}, #{entity.sex}, #{entity.age}, #{entity.name}, #{entity.bloodtypeid}, #{entity.starid}, #{entity.animalyearid}, #{entity.address}, #{entity.stateid}, #{entity.questionid}, #{entity.answer})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into userinfo(loginpwd, friendshippolicyid, nickname, faceid, sex, age, name, bloodtypeid, starid, animalyearid, address, stateid, questionid, answer)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.loginpwd}, #{entity.friendshippolicyid}, #{entity.nickname}, #{entity.faceid}, #{entity.sex}, #{entity.age}, #{entity.name}, #{entity.bloodtypeid}, #{entity.starid}, #{entity.animalyearid}, #{entity.address}, #{entity.stateid}, #{entity.questionid}, #{entity.answer})
        </foreach>
        on duplicate key update
        loginpwd = values(loginpwd),
        friendshippolicyid = values(friendshippolicyid),
        nickname = values(nickname),
        faceid = values(faceid),
        sex = values(sex),
        age = values(age),
        name = values(name),
        bloodtypeid = values(bloodtypeid),
        starid = values(starid),
        animalyearid = values(animalyearid),
        address = values(address),
        stateid = values(stateid),
        questionid = values(questionid),
        answer = values(answer)
    </insert>

    <insert id="add" parameterType="com.cf.tencentqq.entity.Userinfo">
        insert into qq.userinfo(nickname,loginpwd) values (#{nickname},#{loginpwd})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update userinfo
        <set>
            <if test="loginpwd != null and loginpwd != ''">
                loginpwd = #{loginpwd},
            </if>
            <if test="friendshippolicyid != null">
                friendshippolicyid = #{friendshippolicyid},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="faceid != null">
                faceid = #{faceid},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="bloodtypeid != null">
                bloodtypeid = #{bloodtypeid},
            </if>
            <if test="starid != null">
                starid = #{starid},
            </if>
            <if test="animalyearid != null">
                animalyearid = #{animalyearid},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="stateid != null">
                stateid = #{stateid},
            </if>
            <if test="questionid != null">
                questionid = #{questionid},
            </if>
            <if test="answer != null and answer != ''">
                answer = #{answer},
            </if>
            <if test="signature != null and signature != ''">
                signature = #{signature},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from userinfo where id = #{id}
    </delete>

</mapper>

